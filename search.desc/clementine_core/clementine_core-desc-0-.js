searchState.loadedDescShard("clementine_core", 0, "Clementine Core\nType alias for EVM address\nType alias for withdrawal payment, HashType is taproot …\nBitcoin Syncer\nBuilders\nCitrea Related Utilities\nCommand Line Interface\nConfiguration Options\nDatabase Operations\nErrors\nExecutes a query with a transaction if it is provided.\nExtended Remote Procedure Call\nFetches the next message from a stream which is unwrapped …\nFetches next message from a stream.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHeader Chain Prover\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMuSig2\nServers\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nmessage_length, pk_type_idx, pk_idx, deposit_outpoint\nwatchtower_idx, deposit_outpoint message length is fixed …\nround_idx, kickoff_idx Message length is fixed …\nGenerates a Winternitz public key for the given path.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates the hashes from the preimages. Preimages are …\nGenerates an auth token using the hash of the public key …\nReturns derivied Winternitz secret key from given path.\nReturns the parameters for the Winternitz signature.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSigns given data with Winternitz signature.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nVerifies an auth token using the provided public key.\nAggregator struct. This struct is responsible for …\nCollects and distributes keys to verifiers from operators …\nFetches operator xonly public keys from operators.\nFetches operator xonly public keys from operators.\nFetches verifier public keys from verifiers and sets up …\nReturns the argument unchanged.\nReturns a list of operator clients that are participating …\nReturns a list of verifier clients that are participating …\nCalls <code>U::from(self)</code>.\nHandles a new deposit request from a user. This function …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEvents emitted by the Bitcoin syncer. It emits the …\nA task that syncs Bitcoin blocks from the Bitcoin node to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new Bitcoin syncer task.\nIf no block info exists in the DB, fetches the current …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nGlobal secp context.\nThis is an unspendable pubkey.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nAddress Builder\nScript Builder\nSighash Builder\nTransaction Builder\nShorthand function for creating a checksig taproot …\nCreates a taproot address with either key path spend or …\nGenerates a deposit address for the user. Funds can be …\nStruct for deposit script that commits Citrea address to …\nStruct for scripts that only includes a CHECKSIG\nStruct for scripts that do not conform to any other type …\nStruct for scripts that reveal a preimage and verify it …\nStruct for deposit script that replaces an old move tx …\nA trait that marks all script types. Each script has a …\nStruct for scripts that include a relative timelock (by …\nStruct for scripts that commit to a message using …\nExtracts the committed data from the witness. Note: The …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ncommitments is a Vec of winternitz public key and message …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nContains information about the spend path that is needed …\nRefer to bridge design diagram to see which NofN …\nThese operator sighashes are needed so that each operator …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nType to uniquely identify a deposit.\nContext for a single operator and round, and optionally a …\nHelper struct to get specific kickoff winternitz keys for …\nStruct to retrieve and cache data from DB for creating …\nTypes of all transactions that can be created. Some …\nStruct to store common txhandlers for kickoffs\nTxInputNotFound is returned when the input is not found in …\nCreates a P2A output for CPFP.\nCreates a P2WSH output that anyone can spend. TODO: We …\nWe assume that the vector of (Txid, Transaction) includes …\nCreates a <code>TxHandlerBuilder</code> for the <code>emergency_stop_tx</code>. This …\nCreates a <code>TxHandler</code> for the <code>move_to_vault_tx</code>. This …\nCreates a <code>TxHandler</code> for the <code>optimistic_payout_tx</code>. This …\nCreates a <code>TxHandler</code> for the <code>payout_tx</code>. This transaction …\nCreates a <code>TxHandlerBuilder</code> for the <code>move_to_vault_tx</code>. This …\nCreates the nth (0-indexed) <code>round_txhandler</code> and …\nFunction to create the round txhandler and ready to …\nHelper function to create a taproot output that combines a …\nUser’s EVM address.\nTODO: output likely fallible\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the winternitz keys for a specific sequential …\nReturns sorted verifiers, they are sorted so that their …\nReturns sorted watchtowers, they are sorted so that their …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains all necessary context for creating txhandlers for …\nContains all necessary context for creating txhandlers for …\nContains all necessary context for creating txhandlers for …\nCreates a db cache that can be used to create txhandlers …\nCreates a db cache that can be used to create txhandlers …\nCached nofn xonly public key used for deposit.\nold move_to_vault txid that was replaced\nCreates a OP_RETURN output.\nX-only public keys of operators that will participate in …\nUser’s recovery taproot address.\nConstructs the witness for a script path spend of a …\nSigns all <strong>unsigned</strong> transaction inputs using the provided …\nstore move_to_vault and previous ready to reimburse\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nPublic keys of verifiers that will participate in the …\nX-only public keys of watchtowers that will participate in …\nEntity whose signature is needed to unlock the input utxo\nthis type is for operator’s signatures that need to be …\nFor operator signatures that are needed to be saved during …\nthis type is for signatures that is needed for the entity …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nThe vout of the assert utxo in KickoffTx\nThe vout of the burn connector utxo in RoundTx and …\nThe vout of the challenge utxo in KickoffTx\nThe vout of the deposited btc utxo in MoveTx\nThe vout of the disprove utxo in KickoffTx\nThe vout of the kickoff utxo in RoundTx\nThe vout of the kickoff finalizer utxo in KickoffTx\nThe vout of the latest blockhash utxo in KickoffTx\nThe vout of the reimburse utxo in KickoffTx\nThe vout of the reimburse connector utxo in RoundTx\nThe vouts of specific utxos in the deposit contract\nThe vout of the watchtower challenge utxo in KickoffTx\nThe vout of the watchtower challenge ack utxo in KickoffTx\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nCreates and signs all transaction types that can be signed …\nReturns the argument unchanged.\nDeterministically generates a set of kickoff indices for …\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nGenerated by the following Solidity interface…\nModule containing a contract’s types and functions.\nCitrea client is responsible for interacting with the …\nClient implementation for the <code>LightClientProverRpc</code> RPC API.\nReturns deposit move txids, starting from the last deposit …\nReturns withdrawal utxos, starting from the last …\nReturns the argument unchanged.\nReturns the L2 block height range for the given L1 block …\nReturns the light client proof and its L2 height for the …\nGenerate state transition data for the given L1 block …\nReturns the replacement deposit move txids for the given …\nCalls <code>U::from(self)</code>.\nParameters\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nFetches an UTXO from Citrea for the given withdrawal index.\nContainer for all the <code>BRIDGE_CONTRACT</code> function calls.\nContainer for all the <code>BRIDGE_CONTRACT</code> custom errors.\nContainer for all the <code>BRIDGE_CONTRACT</code> events.\nA <code>BRIDGE_CONTRACT</code> instance.\nThe creation / init bytecode of the contract.\nCreates a new call builder for the [<code>CODESEP_POS</code>] function.\nFunction with signature <code>CODESEP_POS()</code> and selector …\nContainer type for the return parameters of the …\nThe runtime bytecode of the contract, as deployed on the …\nEvent with signature …\nEvent with signature …\nCreates a new event filter for the <code>DepositReplaced</code> event.\nEvent with signature <code>DepositScriptUpdate(bytes,bytes)</code> and …\nCreates a new event filter for the <code>DepositScriptUpdate</code> …\nEvent with signature …\nCreates a new event filter for the <code>DepositTransferFailed</code> …\nCreates a new event filter for the <code>Deposit</code> event.\nCreates a new call builder for the [<code>EPOCH</code>] function.\nFunction with signature <code>EPOCH()</code> and selector <code>0xa0dc2758</code>.\nContainer type for the return parameters of the <code>EPOCH()</code> …\nEvent with signature …\nCreates a new event filter for the …\nCreates a new call builder for the [<code>INPUT_INDEX</code>] function.\nFunction with signature <code>INPUT_INDEX()</code> and selector …\nContainer type for the return parameters of the …\nEvent with signature <code>Initialized(uint64)</code> and selector …\nCreates a new event filter for the <code>Initialized</code> event.\nCustom error with signature <code>InvalidInitialization()</code> and …\nCreates a new call builder for the [<code>KEY_VERSION</code>] function.\nFunction with signature <code>KEY_VERSION()</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>LIGHT_CLIENT</code>] function.\nFunction with signature <code>LIGHT_CLIENT()</code> and selector …\nContainer type for the return parameters of the …\nCustom error with signature <code>NotInitializing()</code> and selector …\nEvent with signature <code>OperatorUpdated(address,address)</code> and …\nCreates a new event filter for the <code>OperatorUpdated</code> event.\nCustom error with signature <code>OwnableInvalidOwner(address)</code> …\nCustom error with signature …\nEvent with signature …\nCreates a new event filter for the <code>OwnershipTransferStarted</code>…\nEvent with signature <code>OwnershipTransferred(address,address)</code> …\nCreates a new event filter for the <code>OwnershipTransferred</code> …\nEvent with signature <code>ReplaceScriptUpdate(bytes,bytes)</code> and …\nCreates a new event filter for the <code>ReplaceScriptUpdate</code> …\nCreates a new call builder for the […\nFunction with signature <code>SCHNORR_VERIFIER_PRECOMPILE()</code> and …\nContainer type for the return parameters of the …\nAll the selectors of this enum.\nAll the selectors of this enum.\nAll the selectors of this enum.\nCreates a new call builder for the [<code>SIGHASH_ALL_HASH_TYPE</code>] …\nFunction with signature <code>SIGHASH_ALL_HASH_TYPE()</code> and …\nContainer type for the return parameters of the …\nCreates a new call builder for the […\nFunction with signature …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>SPEND_TYPE_EXT</code>] …\nFunction with signature <code>SPEND_TYPE_EXT()</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>SPEND_TYPE_NO_EXT</code>] …\nFunction with signature <code>SPEND_TYPE_NO_EXT()</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>SYSTEM_CALLER</code>] …\nFunction with signature <code>SYSTEM_CALLER()</code> and selector …\nContainer type for the return parameters of the …\nEvent with signature …\nCreates a new event filter for the <code>SafeWithdrawal</code> event.\nEvent with signature …\nCreates a new event filter for the <code>Withdrawal</code> event.\nCreates a new call builder for the [<code>acceptOwnership</code>] …\nFunction with signature <code>acceptOwnership()</code> and selector …\nContainer type for the return parameters of the …\nReturns a reference to the address.\nSets the address and returns <code>self</code>.\nCreates a new call builder for the [<code>batchWithdraw</code>] …\nFunction with signature <code>batchWithdraw(bytes32[],bytes4[])</code> …\nContainer type for the return parameters of the …\nCreates a new call builder using this contract instance’…\nDeploys this contract using the given <code>provider</code> and …\nDeploys this contract using the given <code>provider</code> and …\nCreates a <code>RawCallBuilder</code> for deploying this contract using …\nCreates a <code>RawCallBuilder</code> for deploying this contract using …\nCreates a new call builder for the [<code>deposit</code>] function.\nCreates a new call builder for the [<code>depositAmount</code>] …\nFunction with signature <code>depositAmount()</code> and selector …\nContainer type for the return parameters of the …\nFunction with signature …\nCreates a new call builder for the [<code>depositPrefix</code>] …\nFunction with signature <code>depositPrefix()</code> and selector …\nContainer type for the return parameters of the …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>depositSuffix</code>] …\nFunction with signature <code>depositSuffix()</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>depositTxIds</code>] function.\nFunction with signature <code>depositTxIds(uint256)</code> and selector …\nContainer type for the return parameters of the …\nCreates a new event filter using this contract instance’…\nCreates a new call builder for the [<code>failedDepositVault</code>] …\nFunction with signature <code>failedDepositVault()</code> and selector …\nContainer type for the return parameters of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new call builder for the [<code>getAggregatedKey</code>] …\nFunction with signature <code>getAggregatedKey()</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>getWithdrawalCount</code>] …\nFunction with signature <code>getWithdrawalCount()</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>initialize</code>] function.\nFunction with signature <code>initialize(bytes,bytes,uint256)</code> …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>initialized</code>] function.\nFunction with signature <code>initialized()</code> and selector …\nContainer type for the return parameters of the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new wrapper around an on-chain <code>BRIDGE_CONTRACT</code> …\nCreates a new wrapper around an on-chain <code>BRIDGE_CONTRACT</code> …\nCreates a new call builder for the [<code>operator</code>] function.\nFunction with signature <code>operator()</code> and selector <code>0x570ca735</code>.\nContainer type for the return parameters of the <code>operator()</code> …\nCreates a new call builder for the [<code>owner</code>] function.\nFunction with signature <code>owner()</code> and selector <code>0x8da5cb5b</code>.\nContainer type for the return parameters of the <code>owner()</code> …\nCreates a new call builder for the [<code>pendingOwner</code>] function.\nFunction with signature <code>pendingOwner()</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>processedTxIds</code>] …\nFunction with signature <code>processedTxIds(bytes32)</code> and …\nContainer type for the return parameters of the …\nReturns a reference to the provider.\nCreates a new call builder for the [<code>renounceOwnership</code>] …\nFunction with signature <code>renounceOwnership()</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>replaceDeposit</code>] …\nFunction with signature …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>replacePrefix</code>] …\nFunction with signature <code>replacePrefix()</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>replaceSuffix</code>] …\nFunction with signature <code>replaceSuffix()</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>safeWithdraw</code>] function.\nFunction with signature …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>setDepositScript</code>] …\nFunction with signature <code>setDepositScript(bytes,bytes)</code> and …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>setFailedDepositVault</code>] …\nFunction with signature <code>setFailedDepositVault(address)</code> and …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>setOperator</code>] function.\nFunction with signature <code>setOperator(address)</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>setReplaceScript</code>] …\nFunction with signature <code>setReplaceScript(bytes,bytes)</code> and …\nContainer type for the return parameters of the …\nSets the address.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nCreates a new call builder for the [<code>transferOwnership</code>] …\nFunction with signature <code>transferOwnership(address)</code> and …\nContainer type for the return parameters of the …\nClones the provider and returns a new instance with the …\nCreates a new call builder for the [<code>withdraw</code>] function.\nFunction with signature <code>withdraw(bytes32,bytes4)</code> and …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>withdrawalUTXOs</code>] …\nFunction with signature <code>withdrawalUTXOs(uint256)</code> and …\nContainer type for the return parameters of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nClementine (C) 2025 Chainway Limited\nActor to run.\nTOML formatted configuration file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets configuration using CLI arguments, for binaries. If …\nSelects a configuration source for the main config or the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTOML formatted protocol parameters file.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nVerbosity level, ranging from 0 (none) to 5 (highest)\nConfiguration options for any Clementine target (tests, …\nPath to the aggregator certificate file. (used to …\nAll Secret keys. Just for testing purposes.\nAll Secret keys. Just for testing purposes.\nBitcoin RPC user password.\nBitcoin remote procedure call URL.\nBitcoin RPC user.\nBridge contract address.\nPath to the CA certificate file which is used to verify …\nCitrea’s EVM Chain ID.\nCitrea light client prover RPC URL.\nCitrea RPC URL.\nPath to the client certificate file. (used to communicate …\nPath to the client key file.\nWhether client certificates should be restricted to …\nPostgreSQL database host address.\nPostgreSQL database name.\nPostgreSQL database user password.\nPostgreSQL database port.\nPostgreSQL database user name.\nEnvironment Variable Support For <code>BridgeConfig</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the number of challenge ack hashes needed for a …\nReturns the total number of winternitz pks used in kickoff …\nReturns the number of required signatures for N-of-N …\nReturns the total number of unspent kickoff signatures …\nHost of the operator or the verifier\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>BridgeConfig</code> with default values.\nOperator endpoint. For the aggregator only\nOperator’s fee for withdrawal, in satoshis.\nPort of the operator or the verifier\nGet the protocol paramset defined by the paramset name.\nProtocol paramset\nSecret key for the operator or the verifier.\nSecurity council.\nPath to the server certificate file.\nPath to the server key file.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nRead contents of a TOML file and generate a <code>BridgeConfig</code>.\nTry to parse a <code>BridgeConfig</code> from given TOML formatted …\nVerifier endpoints. For the aggregator only\nAdditional secret key that will be used for creating …\nProtocol parameters that affect the transactions in the …\nA pre-defined paramset name that can be converted into a …\nThis is the log_d used across the codebase.\nNumber of blocks for assert timeout timelock (currently …\nBridge deposit amount that users can deposit.\nCollateral funding amount for operators used to fund the …\nNumber of blocks for disprove timeout timelock (currently …\nAmount of depth a block should have from the current head …\nReturns the argument unchanged.\nReturns the argument unchanged.\nBatch size of the header chain proofs\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAmount allocated for each kickoff UTXO.\nLength of the blockhash commitment in kickoff transactions.\nNumber of blocks for latest blockhash timeout timelock …\nBitcoin network to work on (mainnet, testnet, regtest).\nNumber of kickoff UTXOs per round transaction.\nNumber of round transactions that the operator will create.\nNumber of kickoffs that are signed per round and deposit. …\nAmount allocated for operator challenge transactions.\nNumber of blocks for operator challenge NACK timelock …\nNumber of blocks for operator challenge timeout timelock …\nNumber of blocks for operator reimburse timelock …\nstart height to sync the chain from, i.e. the height …\nTime to wait before trying to disprove (so that you …\nTime to wait after a kickoff to send a watchtower challenge\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nNumber of blocks after which user can take deposit back if …\nTotal number of bytes of a watchtower challenge.\nNumber of blocks for watchtower challenge timeout timelock …\nWinternitz derivation log_d (shared for all WOTS …\nThe amount of the P2A anchor output.\nThe minimum possible amount that a UTXO can have when …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPostgreSQL database connection details.\nDatabase transaction for Postgres.\nReturns\nStarts a database transaction.\nCloses database connection.\nReturns the argument unchanged.\nRetrieves BitVM setup data for a specific operator, …\nReturns\nReturns block hash and header for a given range of …\nGets a block’s proof by referring to it by it’s hash.\nSome fee payer TXs may not hit onchain, so we need to bump …\nGets a unique int for a deposit outpoint\nRetrieves the deposit signatures for a single operator for …\nGets emergency stop transactions for a list of move …\nGets the funding UTXO for kickoffs\nReturns the last deposit index. If no deposits exist, …\nReturns the last withdrawal index where …\nReturns latest finalized blocks height from the database.\nGets the latest block’s info that it’s proven.\nGets the last processed block height\nGets the newest n number of block’s info that their …\nGets the first finalized block after the latest proven …\nGets Winternitz public keys for every sequential …\nRetrieves public hashes for a specific operator, …\nReturns the withdrawal indexes and their spending txid for …\nPrepares a valid PostgreSQL URL to a specific database.\nPrepares a valid PostgreSQL URL.\nGets all fee payer UTXOs for a TX with their confirmation …\nGets the current debug state of a TX\nGets all TX submission errors\nGet unspent kickoff sigs for a specific operator and round.\nCalls <code>U::from(self)</code>.\nLoads kickoff machines from the database\nLoads round machines from the database\nEstablishes a new connection to a PostgreSQL database with …\nPurges debug information for a successfully sent TX\nRuns the schema script on a database for the given …\nSaves a fee payer transaction to the database.\nSaves state machines to the database with the current …\nSaves a TX submission error to the debug table\nAdds a new finalized block to the database, later to be …\nSaves BitVM setup data for a specific operator, sequential …\nSets an existing block’s (in database) proof by …\nSaves deposit infos, and returns the deposit_id\nSaves the deposit signatures to the database for a single …\nSets the funding UTXO for kickoffs.\nGets the block hashes that have height bigger then the …\nTODO: wallet_address should have <code>Address</code> type.\nSets public hashes for a specific operator, sequential …\nSets Winternitz public keys (only for kickoff blockhash …\nSets the given payout txs’ txid and operator index for …\nSets a signed emergency stop transaction for a given move …\nSets the unspent kickoff sigs received from operators …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nUpdates or inserts the TX’s sending state in the debug …\nErrors returned by the bridge.\nExtension traits for errors to easily convert them to …\nExtension traits for results to easily convert them to …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConverts the error into an eyre::Report, first wrapping in …\nConverts the error into a tonic::Status. Currently …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nErrors that can occur during Bitcoin RPC operations.\nExtended RPC client that provides additional functionality …\nBumps the fee of a transaction to meet or exceed a target …\nChecks if a UTXO has the expected address and amount.\nCreates a new instance of the ExtendedRpc with a new …\nReturns the number of confirmations for a transaction.\nConnects to Bitcoin RPC and returns a new <code>ExtendedRpc</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the transaction data for a given transaction ID.\nRetrieves the transaction output for a given outpoint.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSends a specified amount of bitcoin to a given address.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nProves finalized blocks, starting from the latest block …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the proof of the latest finalized blockchain tip. If …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>HeaderChainProver</code> instance. Also saves a …\nProves blocks if the batch is ready. If not, skips.\nSaves a new block to database, later to be proven.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nTaproot tweak with tweaked aggregated public key.\nPossible Musig2 modes.\nTaproot tweak with aggregated public key.\nNo taproot tweak.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerates a pair of nonces, one secret and one public. Be …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates Winternitz public keys for every  BitVM assert …\nGenerates Winternitz public keys for every blockhash …\nReturns an operator’s winternitz public keys and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Operator</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nCreates the round state machine by adding a system event …\nPrepares a withdrawal by:\nReturns the argument unchanged.\nReturns gRPC clients.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nA new original deposit request’s details.\nIncludes the deposit params and the nonce gen initial …\nUsed for TxHandlers that verifiers don’t care. These …\nSignatures that are needed multiple times per an operators …\nUsed for TxHandlers that verifiers don’t care. These …\nA tagged signature struct that identifies the …\nTODO: Use this message for all txid instances\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nHashes of preimages that will be used to ACK watchtower …\nGenerated client implementations.\nGenerated server implementations.\nGenerated client implementations.\nGenerated server implementations.\nGenerated client implementations.\nGenerated server implementations.\nNested message and enum types in <code>Deposit</code>.\n/ User’s deposit UTXO.\nOptional outpoint of the deposit transaction\nUser’s EVM address.\nReturns the enum value of <code>fee_type</code>, or the default if the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>NormalSignatureKind</code>, or <code>None</code> if <code>value</code> …\nConverts an <code>i32</code> to a <code>NumberedSignatureKind</code>, or <code>None</code> if …\nConverts an <code>i32</code> to a <code>FeeType</code>, or <code>None</code> if <code>value</code> is not a …\nConverts an <code>i32</code> to a <code>NormalTransactionId</code>, or <code>None</code> if <code>value</code> …\nConverts an <code>i32</code> to a <code>NumberedTransactionType</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nNested message and enum types in <code>GrpcTransactionId</code>.\nID of the nonce session (used to store nonces in verifier…\nUser’s UTXO to claim the deposit\nUser’s […\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>NormalSignatureKind</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>NumberedSignatureKind</code>…\nReturns <code>true</code> if <code>value</code> is a variant of <code>FeeType</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>NormalTransactionId</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nNested message and enum types in <code>NonceGenResponse</code>.\nNumber of nonces to generate\nMove to vault txid that is being replaced.\nNested message and enum types in <code>OperatorParams</code>.\nDeposit identification\n/ X-only public keys of operators that will participate in …\nThe withdrawal output’s amount (user’s signature is …\nThe withdrawal output’s script_pubkey (user’s …\nUser’s recovery taproot address.\nSets <code>fee_type</code> to the provided enum value.\nSets <code>signature_kind</code> to the provided enum value.\nSets <code>signature_kind</code> to the provided enum value.\nSets <code>transaction_type</code> to the provided enum value.\nReturns the enum value of <code>signature_kind</code>, or the default …\nReturns the enum value of <code>signature_kind</code>, or the default …\nNested message and enum types in <code>TaggedSignature</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the enum value of <code>transaction_type</code>, or the default …\nTransaction ID\nThe withdrawal transaction’s txid\nNested message and enum types in …\nNested message and enum types in <code>VerifierDepositSignParams</code>.\n/ Public keys of verifiers that will participate in the …\n/ X-only public keys of watchtowers that will participate …\nWinternitz pubkeys for each bitvm assert tx.\nNested message and enum types in <code>WithdrawResult</code>.\nThe ID of the withdrawal in Citrea\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCreates an emergency stop tx that won’t be broadcasted. …\nSend a pre-signed tx to the network\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nThis will call, DepositNonceGen for every verifier, then …\nPerform an optimistic payout to reimburse a peg-out from …\nCompress requests with the given encoding.\nSets up the system of verifiers, watchtowers and operators …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nCall’s withdraw on all operators Used by the …\nGenerated trait containing gRPC methods that should be …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCreates an emergency stop tx that won’t be broadcasted. …\nSend a pre-signed tx to the network\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nThis will call, DepositNonceGen for every verifier, then …\nPerform an optimistic payout to reimburse a peg-out from …\nCompress responses with the given encoding, if the client …\nSets up the system of verifiers, watchtowers and operators …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nCall’s withdraw on all operators Used by the …\nAn operator is responsible for paying withdrawals. It has …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nSigns everything that includes Operator’s burn connector.\nReturns the argument unchanged.\nReturns an operator’s deposit keys. Deposit keys include …\nReturns an operator’s parameters. It will be called …\nReturns the operator’s xonly public key\nCreates all assert transactions (AssertBegin, MiniAsserts, …\nSigns all tx’s it can according to given transaction …\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nPrepares a withdrawal if it’s profitable and previous …\nChecks if a withdrawal is finalized.\nGenerated trait containing gRPC methods that should be …\nAn operator is responsible for paying withdrawals. It has …\nServer streaming response type for the DepositSign method.\nServer streaming response type for the GetParams method.\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nSigns everything that includes Operator’s burn connector.\nReturns the argument unchanged.\nReturns an operator’s deposit keys. Deposit keys include …\nReturns an operator’s parameters. It will be called …\nReturns the operator’s xonly public key\nCreates all assert transactions (AssertBegin, MiniAsserts, …\nSigns all tx’s it can according to given transaction …\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nPrepares a withdrawal if it’s profitable and previous …\nChecks if a withdrawal is finalized.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nDebug a transaction by retrieving its current state and …\nVerifies every signature and signs move_tx.\nSigns deposit with given aggNonces and verifier’s …\nReturns the argument unchanged.\nReturns verifiers’ metadata. Needs to be called once per …\nSigns all tx’s it can according to given transaction …\nSigns the verifiers own watchtower challenge tx in the …\nChecks if the kickoff tx is malicious and if so, try to …\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nGenerates nonces for a deposit.\nSigns the optimistic payout tx with given aggNonce and …\nCompress requests with the given encoding.\nSaves an operator.\nSets the operator’s winternitz keys and challenge ACK …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nGenerated trait containing gRPC methods that should be …\nServer streaming response type for the DepositSign method.\nServer streaming response type for the NonceGen method.\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nDebug a transaction by retrieving its current state and …\nVerifies every signature and signs move_tx.\nSigns deposit with given aggNonces and verifier’s …\nReturns the argument unchanged.\nReturns verifiers’ metadata. Needs to be called once per …\nSigns all tx’s it can according to given transaction …\nSigns the verifiers own watchtower challenge tx in the …\nChecks if the kickoff tx is malicious and if so, try to …\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nGenerates nonces for a deposit.\nSigns the optimistic payout tx with given aggNonce and …\nCompress responses with the given encoding, if the client …\nSaves an operator.\nSets the operator’s winternitz keys and challenge ACK …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nOperator’s configuration.\nunspent kickoff signatures\nWinternitz pubkeys for each kickoff utxo (to commit …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nRepresents a network address that can be either TCP or …\nGeneric function to create a gRPC server with the given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the StateManager into the consumer task with a …\nLoads the state machines from the database. This method …\nIt requires that the block cache is updated before calling …\nSaves the state machines to the database. Resets the dirty …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nBlock cache to optimize Txid and UTXO lookups for a block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nThis duty is sent after a kickoff utxo is spent by the …\nResult of checking if a kickoff contains if a challenge …\nDuties are notifications that are sent to the owner …\nResult of handling a duty\nDuty was handled, no return value is necessary\n– Round state duties – This duty is sent after a new …\nA string identifier for this owner type used to …\nOwner trait with async handling and tx handler creation\nThis duty is only sent if a kickoff was challenged. This …\nThis duty is only sent if a kickoff was challenged. This …\nThis duty is only sent if a kickoff was challenged. This …\n– Kickoff state duties – This duty is only sent if a …\nRun an async closure and capture any errors in execution.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandle a duty\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nSpecial event that is used to indicate that the state …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nThis event is sent if operators collateral was spent in …\nSpecial event that is used to indicate that the state …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nA task that fetches new blocks from Bitcoin and adds them …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new block fetcher task\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nA task that can be canceled via a oneshot channel\nA task that ignores errors from the inner task and returns …\nA trait for objects that can be converted into a Task\nTask trait defining the core behavior for cancelable …\nA task that adds a certain delay after the inner task has …\nSkips running the task after cancellation using the sender.\nRuns the task in an infinite loop until cancelled using …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIgnores errors from the task.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpawns a <code>tokio::task</code> that runs the task once in the …\nBuffers consecutive errors until the task succeeds, emits …\nConvert self into a Task\nMaps the task’s <code>Ok()</code> output using the given function.\nCreate a new delayed task\nCreate a new cancelable task with a cancellation channel\nRun the task once, returning whether work was done\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nAdds the given delay after a run of the task when the task …\nA background task manager that can hold and manage …\nAbort all tasks by dropping their cancellation senders\nReturns the argument unchanged.\nGraceful shutdown of all tasks\nGraceful shutdown of all tasks with a timeout. All tasks …\nCalls <code>U::from(self)</code>.\nWraps the task in a cancelable loop and spawns it in the …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nChild-Pays-For-Parent: A new “child” transaction is …\nSpecifies the fee bumping strategy used for a transaction.\nReplace-By-Fee: The original unconfirmed transaction is …\nInformation to re-sign an RBF transaction. Specifically …\nManages the process of sending Bitcoin transactions, …\nAdds a transaction to the sending queue based on its type …\nGiven a PSBT with inputs that’ve been signed by the …\nCalculates the appropriate fee rate for a Replace-By-Fee …\nGiven a PSBT with inputs, fill in the existing witnesses …\nReturns debugging information for a transaction\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSaves a transaction to the database queue for sending/fee …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nThis function verifies that the wallet has added a funding …\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitializes <code>tracing</code> as the logger.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMonitors a JoinHandle and aborts the process if the task …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nCreates and signs all the unspent kickoff connector (using …\nCreates and signs the watchtower challenge\nFunction to finalize the deposit. Verifier will check the …\nTODO: This function should be split in to multiple …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nChecks if the kickoff is malicious and sends the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNonces used for a deposit session (last nonce is for the …\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.")