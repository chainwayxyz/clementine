searchState.loadedDescShard("clementine_core", 0, "Clementine üçä\nType alias for EVM address\nBitcoin Syncer\nBitcoin Transaction Builder for Clementine Bridge\nCitrea Related Utilities\nCommand Line Interface\nConfiguration Options\nDatabase Operations\nThis module defines the data structures related to Citrea ‚Ä¶\nErrors\nExecutes a query with a transaction if it is provided.\nBitcoin Extended RPC Interface\nFetches the next message from a stream which is unwrapped ‚Ä¶\nFetches next message from a stream.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHeader Chain Prover\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMuSig2\nServers\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nmessage_length, pk_type_idx, pk_idx, deposit_outpoint\nwatchtower_idx, deposit_outpoint message length is fixed ‚Ä¶\nround_idx, kickoff_idx Message length is fixed ‚Ä¶\nGenerates a Winternitz public key for the given path.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates the hashes from the preimages. Preimages are ‚Ä¶\nGenerates an auth token using the hash of the public key ‚Ä¶\nReturns derivied Winternitz secret key from given path.\nReturns the parameters for the Winternitz signature.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSigns given data with Winternitz signature.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\n<code>ToString::to_string</code>, but without panic on OOM.\nVerifies an auth token using the provided public key.\nAggregator struct. This struct is responsible for ‚Ä¶\nWrapper struct that renders the operator id in the logs.\nWrapper struct that matches operator clients with their ‚Ä¶\nWrapper struct that matches verifier clients with their ‚Ä¶\nWrapper struct that renders the verifier id in the logs.\nCollects and distributes keys to verifiers from operators ‚Ä¶\nFetches operator xonly public keys from operators.\nFetches operator xonly public keys from operators.\nFetches verifier public keys from verifiers and sets up ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a list of operator clients that are participating ‚Ä¶\nReturns a list of verifier clients that are participating ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHandles a new deposit request from a user. This function ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nEvents emitted by the Bitcoin syncer. It emits the ‚Ä¶\nA task that syncs Bitcoin blocks from the Bitcoin node to ‚Ä¶\nTrait for handling new blocks as they are finalized\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandle a new finalized block\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new Bitcoin syncer task.\nIf no block info exists in the DB, fetches the current ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nGlobal secp context.\nThis is an unspendable pubkey.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nBitcoin Address Construction\nBitcoin Script Construction\nSighash Builder\nbuilder::transaction\nCalculates the depth of each leaf in a balanced Taproot ‚Ä¶\nShorthand function for creating a checksig taproot ‚Ä¶\nCreates a taproot address with given scripts and internal ‚Ä¶\nGenerates a deposit address for the user. Funds can be ‚Ä¶\nBuilds a Taproot address specifically for replacement ‚Ä¶\nA helper to construct a <code>TaprootBuilder</code> from a slice of ‚Ä¶\nBlock cache to optimize Txid and UTXO lookups for a block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nStruct for deposit script that commits Citrea address to ‚Ä¶\nStruct for scripts that only includes a CHECKSIG\nStruct for scripts that do not conform to any other type ‚Ä¶\nStruct for scripts that reveal a preimage of a OP_HASH160 ‚Ä¶\nStruct for deposit script that replaces an old move tx ‚Ä¶\nA trait that marks all script types. Each script has a ‚Ä¶\nStruct for scripts that include a relative timelock (by ‚Ä¶\nStruct for scripts that commit to a message using ‚Ä¶\nExtracts the committed data from the witness. Note: The ‚Ä¶\nExtracts the committed data from the witness. Note: The ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ncommitments is a Vec of winternitz public key and message ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nIdentifies a signature by operator, round, and kickoff ‚Ä¶\nContains information to uniquely identify a single ‚Ä¶\nContains information about the spend path that is needed ‚Ä¶\nCompletes the partial info with a signature id and spend ‚Ä¶\nCompletes the partial info with a kickoff txid (for ‚Ä¶\nGenerates the sighash stream for all N-of-N (verifier) ‚Ä¶\nGenerates the sighash stream for all operator signatures ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nContext for a single operator and round, and optionally a ‚Ä¶\nHelper struct to get specific kickoff winternitz keys for ‚Ä¶\nStruct to retrieve and cache data from DB for creating ‚Ä¶\nMarker type for signed transactions.\nTypes of all transactions that can be created. Some ‚Ä¶\nHandler for protocol transactions, wrapping inputs, ‚Ä¶\nBuilder for <code>TxHandler</code>, allowing stepwise construction of ‚Ä¶\nStores and manages cached transaction handlers for ‚Ä¶\nTxInputNotFound is returned when the input is not found in ‚Ä¶\nMarker type for unsigned transactions.\nMarker type for unsigned transactions.\nAdds an input to the transaction being built.\nAdds an input with a pre-specified witness to the ‚Ä¶\nAdds an output to the transaction being built.\nCreates a P2A (anchor) output for Child Pays For Parent ‚Ä¶\nCalculates the Taproot sighash for a key spend input for ‚Ä¶\nCalculates the Taproot sighash for a script spend input by ‚Ä¶\nCalculates the Taproot sighash for a script spend input by ‚Ä¶\nCalculates sighashes for all shared inputs for a given ‚Ä¶\nCalculates the sighash for the specified input, based on ‚Ä¶\nChallenge Transaction Logic\nCombines multiple emergency stop transactions into a ‚Ä¶\nCreates a <code>TxHandler</code> for burning unused kickoff connectors.\nCreates a Taproot output for a disprove path, combining a ‚Ä¶\nCreates a <code>TxHandler</code> for the <code>emergency_stop_tx</code>.\nCreates a <code>TxHandler</code> for the <code>move_to_vault_tx</code>.\nCreates a <code>TxHandler</code> for the <code>optimistic_payout_tx</code>.\nCreates a <code>TxHandler</code> for the <code>payout_tx</code>.\nCreates a <code>TxHandler</code> for the <code>replacement_deposit_tx</code>.\nCreates the nth (1-indexed) <code>round_txhandler</code> and ‚Ä¶\nCreates the round and ready-to-reimburse txhandlers for a ‚Ä¶\nHelper function to create a Taproot output that combines a ‚Ä¶\nCreates all required transaction handlers for a given ‚Ä¶\nDeposit Signature Ownership Mapping\nEncodes the signed transaction as a raw byte vector.\nFinalizes the transaction, returning an unsigned <code>TxHandler</code>.\nFinalizes the transaction and promotes it to signed, ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a db cache from a contract context. This context ‚Ä¶\nReturns a reference to the cached Bitcoin transaction.\nTakes and returns all cached txhandlers, clearing the ‚Ä¶\nGet the winternitz keys for a specific round tx.\nReturns the Taproot merkle root of the specified input, if ‚Ä¶\nGets the previous ReadyToReimburse txhandler, if any.\nReturns the signature ID for the specified input.\nReturns a spendable input for the specified output index ‚Ä¶\nReturns the protocol transaction type for this handler.\nReturns a reference to the cached transaction ID.\nTransaction Input Types and Utilities\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new, empty cache.\nCreates a new <code>KickoffWinternitzKeys</code> with the given keys ‚Ä¶\nCreates a new <code>TxHandlerBuilder</code> for the specified ‚Ä¶\nContains all necessary context for creating txhandlers for ‚Ä¶\nContains all necessary context for creating txhandlers for ‚Ä¶\nContains all necessary context for creating txhandlers for ‚Ä¶\nCreates a db cache that can be used to create txhandlers ‚Ä¶\nCreates a db cache that can be used to create txhandlers ‚Ä¶\nA non-ephemeral anchor output. It is used in tx‚Äôs that ‚Ä¶\nCreates an OP_RETURN output with the given data slice.\nTransaction Output Types and Utilities\nPromotes an unsigned handler to a signed handler, checking ‚Ä¶\nRemoves a <code>TxHandler</code> from a map by transaction type, ‚Ä¶\nSets the witness for a key path spend input.\nSets the witness for a script path spend input.\nTransaction Signing Utilities\nSigns all <strong>unsigned</strong> transaction inputs using the provided ‚Ä¶\nStores txhandlers for the next kickoff, caching ‚Ä¶\nStores MoveToVault and previous ReadyToReimburse for the ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\n<code>ToString::to_string</code>, but without panic on OOM.\nSets the version for the transaction being built.\nCreates a <code>TxHandler</code> for the <code>challenge_timeout</code> transaction.\nCreates a <code>TxHandler</code> for the <code>challenge</code> transaction.\nCreates a <code>TxHandler</code> for the <code>disprove_tx</code>.\nCreates a <code>TxHandler</code> for the OperatorChallengeAck ‚Ä¶\nCreates a <code>TxHandler</code> for the <code>OperatorChallengeNack</code> ‚Ä¶\nCreates a <code>TxHandler</code> for the <code>watchtower_challenge_timeout_tx</code>‚Ä¶\nCreates a <code>TxHandler</code> for the <code>watchtower_challenge_tx</code>.\nDescribes the ownership and sighash type for a required ‚Ä¶\nEnumerates the protocol entities that may own a required ‚Ä¶\nN-of-N signature required for deposit, with the given ‚Ä¶\nOperator‚Äôs signature required for deposit (shared with ‚Ä¶\nOperator‚Äôs signature required during first setup, with ‚Ä¶\nSignature required for the entity itself, with the given ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the sighash type for this signature owner, if any.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nThe vout of the assert utxo in KickoffTx\nThe vout of the challenge utxo in KickoffTx\nThe vout of the collateral utxo in ReadyToReimburseTx\nThe vout of the collateral utxo in RoundTx\nThe vout of the deposited btc utxo in MoveTx\nThe vout of the disprove utxo in KickoffTx\nThe vout of the kickoff utxo in RoundTx\nThe vout of the kickoff finalizer utxo in KickoffTx\nThe vout of the latest blockhash utxo in KickoffTx\nThe vout of the reimburse utxo in KickoffTx\nThe vout of the reimburse connector utxo in RoundTx\nRepresents a spendable transaction input, including ‚Ä¶\nError type for spendable input construction and validation.\nRepresents a fully specified transaction input, including ‚Ä¶\nEnumerates protocol-specific UTXO output indices for ‚Ä¶\nThe vout of the watchtower challenge utxo in KickoffTx\nThe vout of the watchtower challenge ack utxo in KickoffTx\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a <code>SpendableTxIn</code> from scripts, value, and the ‚Ä¶\nConstructs a <code>SpentTxIn</code> from a spendable input and ‚Ä¶\nReturns a reference to the previous outpoint (OutPoint) ‚Ä¶\nReturns a reference to the previous output (TxOut) for ‚Ä¶\nReturns a reference to the scripts for this input.\nReturns the signature ID for this input.\nReturns a reference to the Taproot spend info for this ‚Ä¶\nReturns the spend path for this input.\nReturns a reference to the underlying <code>SpendableTxIn</code>.\nReturns the Taproot tweak data for this input, based on ‚Ä¶\nReturns the vout index for this UTXO in the corresponding ‚Ä¶\nReturns a reference to the witness data for this input, if ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>SpendableTxIn</code> from all fields.\nCreates a new <code>SpendableTxIn</code> with only a previous output ‚Ä¶\nSets the Taproot spend info for this input.\nSets the witness data for this input.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nConverts this <code>SpentTxIn</code> into a Bitcoin <code>TxIn</code> for inclusion ‚Ä¶\n<code>ToString::to_string</code>, but without panic on OOM.\nRepresents a spendable transaction output, including ‚Ä¶\nReturns the argument unchanged.\nConstructs an <code>UnspentTxOut</code> from a partial <code>TxOut</code> (no ‚Ä¶\nConstructs an <code>UnspentTxOut</code> from value, scripts, and key ‚Ä¶\nCalls <code>U::from(self)</code>.\nConstructs an <code>UnspentTxOut</code> from all fields.\nReturns a reference to the scripts for this output.\nSets the Taproot spend info for this output.\nReturns a reference to the Taproot spend info for this ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns a reference to the underlying <code>TxOut</code>.\nData to identify the deposit and kickoff.\nCreates and signs all transaction types that can be signed ‚Ä¶\nReturns the argument unchanged.\nDeterministically (given same seed) generates a set of ‚Ä¶\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nGenerated by the following Solidity interface‚Ä¶\nModule containing a contract‚Äôs types and functions.\nCitrea client is responsible for interacting with the ‚Ä¶\nClient implementation for the <code>CitreaRpc</code> RPC API.\nClient implementation for the <code>LightClientProverRpc</code> RPC API.\nReturns deposit move txids, starting from the last deposit ‚Ä¶\nReturns withdrawal utxos, starting from the last ‚Ä¶\nReturns the argument unchanged.\nReturns the L2 block height range for the given L1 block ‚Ä¶\nReturns the light client proof and its L2 height for the ‚Ä¶\nGenerate state transition data for the given L1 block ‚Ä¶\nReturns the replacement deposit move txids for the given ‚Ä¶\nFetches the storage proof for a given deposit index and ‚Ä¶\nCalls <code>U::from(self)</code>.\nParameters\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nFetches an UTXO from Citrea for the given withdrawal index.\nContainer for all the <code>BRIDGE_CONTRACT</code> function calls.\nContainer for all the <code>BRIDGE_CONTRACT</code> custom errors.\nContainer for all the <code>BRIDGE_CONTRACT</code> events.\nA <code>BRIDGE_CONTRACT</code> instance.\nThe creation / init bytecode of the contract.\nCreates a new call builder for the [<code>CODESEP_POS</code>] function.\nFunction with signature <code>CODESEP_POS()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nThe runtime bytecode of the contract, as deployed on the ‚Ä¶\nEvent with signature ‚Ä¶\nEvent with signature ‚Ä¶\nCreates a new event filter for the <code>DepositReplaced</code> event.\nEvent with signature <code>DepositScriptUpdate(bytes,bytes)</code> and ‚Ä¶\nCreates a new event filter for the <code>DepositScriptUpdate</code> ‚Ä¶\nEvent with signature ‚Ä¶\nCreates a new event filter for the <code>DepositTransferFailed</code> ‚Ä¶\nCreates a new event filter for the <code>Deposit</code> event.\nCreates a new call builder for the [<code>EPOCH</code>] function.\nFunction with signature <code>EPOCH()</code> and selector <code>0xa0dc2758</code>.\nContainer type for the return parameters of the <code>EPOCH()</code> ‚Ä¶\nEvent with signature ‚Ä¶\nCreates a new event filter for the ‚Ä¶\nCreates a new call builder for the [<code>INPUT_INDEX</code>] function.\nFunction with signature <code>INPUT_INDEX()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nEvent with signature <code>Initialized(uint64)</code> and selector ‚Ä¶\nCreates a new event filter for the <code>Initialized</code> event.\nCustom error with signature <code>InvalidInitialization()</code> and ‚Ä¶\nCreates a new call builder for the [<code>KEY_VERSION</code>] function.\nFunction with signature <code>KEY_VERSION()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>LIGHT_CLIENT</code>] function.\nFunction with signature <code>LIGHT_CLIENT()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCustom error with signature <code>NotInitializing()</code> and selector ‚Ä¶\nEvent with signature <code>OperatorUpdated(address,address)</code> and ‚Ä¶\nCreates a new event filter for the <code>OperatorUpdated</code> event.\nCustom error with signature <code>OwnableInvalidOwner(address)</code> ‚Ä¶\nCustom error with signature ‚Ä¶\nEvent with signature ‚Ä¶\nCreates a new event filter for the <code>OwnershipTransferStarted</code>‚Ä¶\nEvent with signature <code>OwnershipTransferred(address,address)</code> ‚Ä¶\nCreates a new event filter for the <code>OwnershipTransferred</code> ‚Ä¶\nEvent with signature <code>ReplaceScriptUpdate(bytes,bytes)</code> and ‚Ä¶\nCreates a new event filter for the <code>ReplaceScriptUpdate</code> ‚Ä¶\nCreates a new call builder for the [‚Ä¶\nFunction with signature <code>SCHNORR_VERIFIER_PRECOMPILE()</code> and ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nAll the selectors of this enum.\nAll the selectors of this enum.\nAll the selectors of this enum.\nCreates a new call builder for the [<code>SIGHASH_ALL_HASH_TYPE</code>] ‚Ä¶\nFunction with signature <code>SIGHASH_ALL_HASH_TYPE()</code> and ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [‚Ä¶\nFunction with signature ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>SPEND_TYPE_EXT</code>] ‚Ä¶\nFunction with signature <code>SPEND_TYPE_EXT()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>SPEND_TYPE_NO_EXT</code>] ‚Ä¶\nFunction with signature <code>SPEND_TYPE_NO_EXT()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>SYSTEM_CALLER</code>] ‚Ä¶\nFunction with signature <code>SYSTEM_CALLER()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nEvent with signature ‚Ä¶\nCreates a new event filter for the <code>SafeWithdrawal</code> event.\nEvent with signature ‚Ä¶\nCreates a new event filter for the <code>Withdrawal</code> event.\nCreates a new call builder for the [<code>acceptOwnership</code>] ‚Ä¶\nFunction with signature <code>acceptOwnership()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nReturns a reference to the address.\nSets the address and returns <code>self</code>.\nCreates a new call builder for the [<code>batchWithdraw</code>] ‚Ä¶\nFunction with signature <code>batchWithdraw(bytes32[],bytes4[])</code> ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder using this contract instance‚Äô‚Ä¶\nDeploys this contract using the given <code>provider</code> and ‚Ä¶\nDeploys this contract using the given <code>provider</code> and ‚Ä¶\nCreates a <code>RawCallBuilder</code> for deploying this contract using ‚Ä¶\nCreates a <code>RawCallBuilder</code> for deploying this contract using ‚Ä¶\nCreates a new call builder for the [<code>deposit</code>] function.\nCreates a new call builder for the [<code>depositAmount</code>] ‚Ä¶\nFunction with signature <code>depositAmount()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nFunction with signature ‚Ä¶\nCreates a new call builder for the [<code>depositPrefix</code>] ‚Ä¶\nFunction with signature <code>depositPrefix()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>depositSuffix</code>] ‚Ä¶\nFunction with signature <code>depositSuffix()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>depositTxIds</code>] function.\nFunction with signature <code>depositTxIds(uint256)</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new event filter using this contract instance‚Äô‚Ä¶\nCreates a new call builder for the [<code>failedDepositVault</code>] ‚Ä¶\nFunction with signature <code>failedDepositVault()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new call builder for the [<code>getAggregatedKey</code>] ‚Ä¶\nFunction with signature <code>getAggregatedKey()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>getWithdrawalCount</code>] ‚Ä¶\nFunction with signature <code>getWithdrawalCount()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>initialize</code>] function.\nFunction with signature <code>initialize(bytes,bytes,uint256)</code> ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>initialized</code>] function.\nFunction with signature <code>initialized()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new wrapper around an on-chain <code>BRIDGE_CONTRACT</code> ‚Ä¶\nCreates a new wrapper around an on-chain <code>BRIDGE_CONTRACT</code> ‚Ä¶\nCreates a new call builder for the [<code>operator</code>] function.\nFunction with signature <code>operator()</code> and selector <code>0x570ca735</code>.\nContainer type for the return parameters of the <code>operator()</code> ‚Ä¶\nCreates a new call builder for the [<code>owner</code>] function.\nFunction with signature <code>owner()</code> and selector <code>0x8da5cb5b</code>.\nContainer type for the return parameters of the <code>owner()</code> ‚Ä¶\nCreates a new call builder for the [<code>pendingOwner</code>] function.\nFunction with signature <code>pendingOwner()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>processedTxIds</code>] ‚Ä¶\nFunction with signature <code>processedTxIds(bytes32)</code> and ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nReturns a reference to the provider.\nCreates a new call builder for the [<code>renounceOwnership</code>] ‚Ä¶\nFunction with signature <code>renounceOwnership()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>replaceDeposit</code>] ‚Ä¶\nFunction with signature ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>replacePrefix</code>] ‚Ä¶\nFunction with signature <code>replacePrefix()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>replaceSuffix</code>] ‚Ä¶\nFunction with signature <code>replaceSuffix()</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>safeWithdraw</code>] function.\nFunction with signature ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>setDepositScript</code>] ‚Ä¶\nFunction with signature <code>setDepositScript(bytes,bytes)</code> and ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>setFailedDepositVault</code>] ‚Ä¶\nFunction with signature <code>setFailedDepositVault(address)</code> and ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>setOperator</code>] function.\nFunction with signature <code>setOperator(address)</code> and selector ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>setReplaceScript</code>] ‚Ä¶\nFunction with signature <code>setReplaceScript(bytes,bytes)</code> and ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nSets the address.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nCreates a new call builder for the [<code>transferOwnership</code>] ‚Ä¶\nFunction with signature <code>transferOwnership(address)</code> and ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nClones the provider and returns a new instance with the ‚Ä¶\nCreates a new call builder for the [<code>withdraw</code>] function.\nFunction with signature <code>withdraw(bytes32,bytes4)</code> and ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nCreates a new call builder for the [<code>withdrawalUTXOs</code>] ‚Ä¶\nFunction with signature <code>withdrawalUTXOs(uint256)</code> and ‚Ä¶\nContainer type for the return parameters of the ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nClementine (C) 2025 Chainway Limited\nActor to run.\nTOML formatted configuration file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets configuration using CLI arguments, for binaries. If ‚Ä¶\nSelects a configuration source for the main config or the ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTOML formatted protocol parameters file.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nVerbosity level, ranging from 0 (none) to 5 (highest)\nConfiguration options for any Clementine target (tests, ‚Ä¶\nPath to the aggregator certificate file. (used to ‚Ä¶\nBitcoin RPC user password.\nBitcoin remote procedure call URL.\nBitcoin RPC user.\nBridge contract address.\nPath to the CA certificate file which is used to verify ‚Ä¶\nCitrea‚Äôs EVM Chain ID.\nCitrea light client prover RPC URL.\nCitrea RPC URL.\nPath to the client certificate file. (used to communicate ‚Ä¶\nPath to the client key file.\nWhether client certificates should be restricted to ‚Ä¶\nPostgreSQL database host address.\nPostgreSQL database name.\nPostgreSQL database user password.\nPostgreSQL database port.\nPostgreSQL database user name.\nEnvironment Variable Support For <code>BridgeConfig</code>\nReturns the argument unchanged.\nReturns the number of challenge ack hashes needed for a ‚Ä¶\nReturns the total number of Winternitz public keys used in ‚Ä¶\nReturns the number of required signatures for N-of-N ‚Ä¶\nReturns the number of required N-of-N signatures per ‚Ä¶\nReturns the number of required operator signatures for a ‚Ä¶\nReturns the number of required operator signatures per ‚Ä¶\nReturns the total number of unspent kickoff signatures ‚Ä¶\nHost of the operator or the verifier\nCalls <code>U::from(self)</code>.\nCreate a new <code>BridgeConfig</code> with default values.\nOwn operator‚Äôs collateral funding outpoint.\nOperator endpoint. For the aggregator only\nOwn operator‚Äôs reimbursement address.\nOperator‚Äôs fee for withdrawal, in satoshis.\nPort of the operator or the verifier\nGet the protocol paramset defined by the paramset name.\nProtocol paramset\nSecret key for the operator or the verifier.\nSecurity council.\nPath to the server certificate file.\nPath to the server key file.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nRead contents of a TOML file and generate a <code>BridgeConfig</code>.\nTry to parse a <code>BridgeConfig</code> from given TOML formatted ‚Ä¶\nVerifier endpoints. For the aggregator only\nAdditional secret key that will be used for creating ‚Ä¶\nProtocol parameters that affect the transactions in the ‚Ä¶\nA pre-defined paramset name that can be converted into a ‚Ä¶\nThis is the log_d used across the codebase.\nNumber of blocks for assert timeout timelock (currently ‚Ä¶\nBridge deposit amount that users can deposit.\nBridge circuit method id\nDenotes if the bridge is non-standard, i.e. uses 0 sat ‚Ä¶\nCollateral funding amount for operators used to fund the ‚Ä¶\nNumber of blocks for disprove timeout timelock (currently ‚Ä¶\nAmount of depth a block should have from the current head ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenesis chain state hash\nGenesis height to sync the header chain proofs from\nBatch size of the header chain proofs\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAmount allocated for each kickoff UTXO.\nLength of the blockhash commitment in kickoff transactions.\nNumber of blocks for latest blockhash timeout timelock ‚Ä¶\nBitcoin network to work on (mainnet, testnet, regtest).\nNumber of kickoff UTXOs per round transaction.\nNumber of round transactions that the operator will create.\nNumber of kickoffs that are signed per round and deposit. ‚Ä¶\nAmount allocated for operator challenge transactions.\nNumber of blocks for operator challenge NACK timelock ‚Ä¶\nNumber of blocks for operator challenge timeout timelock ‚Ä¶\nNumber of blocks for operator reimburse timelock ‚Ä¶\nstart height to sync the chain from, i.e. the height ‚Ä¶\nTime to wait before trying to disprove (so that you ‚Ä¶\nTime to wait after a kickoff to send a watchtower challenge\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\n<code>ToString::to_string</code>, but without panic on OOM.\nNumber of blocks after which user can take deposit back if ‚Ä¶\nTotal number of bytes of a watchtower challenge.\nNumber of blocks for watchtower challenge timeout timelock ‚Ä¶\nWinternitz derivation log_d (shared for all WOTS ‚Ä¶\nThe minimum possible amount that a UTXO can have when ‚Ä¶\nThe amount of the non-ephemeral P2A anchor output.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPostgreSQL database connection details.\nDatabase transaction for Postgres.\nReturns\nStarts a database transaction.\nCloses database connection.\nThis function assumes there are no blocks or some ‚Ä¶\nReturns the argument unchanged.\nRetrieves BitVM setup data for a specific operator, ‚Ä¶\nReturns\nReturns the previous block hash and header for a given ‚Ä¶\nReturns block hash and header for a given range of ‚Ä¶\nGets a block‚Äôs proof by referring to it by it‚Äôs hash.\nGets a unique int for a deposit outpoint\nRetrieves the deposit signatures for a single operator for ‚Ä¶\nGets emergency stop transactions for a list of move ‚Ä¶\nGets the funding UTXO for kickoffs\nReturns the last deposit index. If no deposits exist, ‚Ä¶\nReturns the last withdrawal index where ‚Ä¶\nReturns latest finalized blocks height from the database.\nGets the latest block‚Äôs info that it‚Äôs proven.\nGets the latest block‚Äôs info that it‚Äôs proven and has ‚Ä¶\nGets the newest n number of block‚Äôs info that their ‚Ä¶\nGets the first finalized block after the latest proven ‚Ä¶\nGets Winternitz public keys for bitvm related inputs of an ‚Ä¶\nGets Winternitz public keys for every sequential ‚Ä¶\nRetrieves public hashes for a specific operator, ‚Ä¶\nReturns the withdrawal indexes and their spending txid for ‚Ä¶\nPrepares a valid PostgreSQL URL to a specific database.\nPrepares a valid PostgreSQL URL.\nGet unspent kickoff sigs for a specific operator and round.\nCalls <code>U::from(self)</code>.\nEstablishes a new connection to a PostgreSQL database with ‚Ä¶\nRuns the schema script on a database for the given ‚Ä¶\nAdds a new finalized block to the database, later to be ‚Ä¶\nSets BitVM setup data for a specific operator and deposit ‚Ä¶\nSets an existing block‚Äôs (in database) proof by ‚Ä¶\nSaves deposit infos, and returns the deposit_id This ‚Ä¶\nSaves the deposit signatures to the database for a single ‚Ä¶\nSets the funding UTXO for kickoffs.\nGets the block hashes that have height bigger then the ‚Ä¶\nSets the operator details to the db. This function ‚Ä¶\nSets Winternitz public keys for bitvm related inputs of an ‚Ä¶\nSets public hashes for a specific operator, sequential ‚Ä¶\nSets Winternitz public keys (only for kickoff blockhash ‚Ä¶\nSets the given payout txs‚Äô txid and operator index for ‚Ä¶\nSets a signed emergency stop transaction for a given move ‚Ä¶\nSets the unspent kickoff sigs received from operators ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nData structure to represent the actors public keys that ‚Ä¶\nData structure to represent the data for a base deposit. ‚Ä¶\nData structure to represent a deposit.\nData structure to represent the deposit outpoint and type.\nType to represent the type of deposit, and related ‚Ä¶\nData structure to represent a single kickoff utxo in an ‚Ä¶\nData structure to represent the data for an operator. ‚Ä¶\nData structure to represent the data for a replacement ‚Ä¶\nData structure to represent the security council that can ‚Ä¶\nUser‚Äôs EVM address.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the outpoint of the deposit.\nReturns the scripts a taproot address of a ‚Ä¶\nReturns the nofn xonly public key of the deposit. It is ‚Ä¶\nReturns the number of operators in the deposit.\nReturns the number of verifiers in the deposit.\nReturns the number of watchtowers in the deposit.\nReturns the index of an operator in the deposit, in the ‚Ä¶\nReturns sorted operators, they are sorted so that their ‚Ä¶\nReturns the index of a verifier in the deposit, in the ‚Ä¶\nReturns sorted verifiers, they are sorted so that their ‚Ä¶\nReturns the index of a watchtower in the deposit, in the ‚Ä¶\nReturns sorted watchtowers, they are sorted so that their ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCached nofn xonly public key used for deposit.\nold move_to_vault txid that was replaced\nX-only public keys of operators that will participate in ‚Ä¶\nUser‚Äôs recovery taproot address.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\n<code>ToString::to_string</code>, but without panic on OOM.\nPublic keys of verifiers that will participate in the ‚Ä¶\nX-only public keys of watchtowers that will participate in ‚Ä¶\nErrors returned by the bridge.\nExtension traits for errors to easily convert them to ‚Ä¶\nExtension traits for results to easily convert them to ‚Ä¶\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConverts the error into an eyre::Report, first wrapping in ‚Ä¶\nConverts the error into a tonic::Status. Currently ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\n<code>ToString::to_string</code>, but without panic on OOM.\nErrors that can occur during Bitcoin RPC operations.\nBitcoin RPC wrapper. Extended RPC provides useful wrapper ‚Ä¶\nBumps the fee of a transaction to meet or exceed a target ‚Ä¶\nChecks if a transaction UTXO has expected address and ‚Ä¶\nCreates a new instance of the <code>ExtendedRpc</code> with a new client\nChecks if an operator‚Äôs collateral is valid and ‚Ä¶\nReturns the number of confirmations for a transaction.\nConnects to Bitcoin RPC and returns a new <code>ExtendedRpc</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves the block header and hash for a given block ‚Ä¶\nReturns block hash of a transaction, if confirmed.\nRetrieves the current blockchain height (number of blocks).\nGets the transactions that created the inputs of a given ‚Ä¶\nGets the transaction data for a given transaction ID.\nRetrieves the transaction output for a given outpoint.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if a transaction is on-chain.\nChecks if an UTXO is spent.\nGets the number of transactions in the mempool.\nSends a specified amount of Bitcoins to the given address.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the proof of the latest finalized blockchain tip. If ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>HeaderChainProver</code> instance. Also saves a ‚Ä¶\nProves blocks if the batch is ready. If not, skips.\nProduces a proof for the chain upto the block with the ‚Ä¶\nProves the work only proof for the given HCP receipt.\nSaves a new block to database, later to be proven.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\n<code>ToString::to_string</code>, but without panic on OOM.\nTaproot tweak with tweaked aggregated public key.\nPossible Musig2 modes.\nTaproot tweak with aggregated public key.\nNo taproot tweak.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerates a pair of nonces, one secret and one public. Be ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nRound index is used to represent the round index safely. ‚Ä¶\nCreates and signs all the assert commitment transactions ‚Ä¶\nCreates and signs the latest blockhash transaction for a ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a 0-indexed index to a RoundIndex. Use this only ‚Ä¶\nGenerates Winternitz public keys for every  BitVM assert ‚Ä¶\nGenerates Winternitz public keys for every blockhash ‚Ä¶\nReturns an operator‚Äôs winternitz public keys and ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates an iterator over rounds from 0 to num_rounds ‚Ä¶\nCreates an iterator over rounds from start to end ‚Ä¶\nCreates a new <code>Operator</code>.\nReturns the next RoundIndex.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nConverts the round to a 0-indexed index.\nPrepares a withdrawal by:\nReturns the argument unchanged.\nReturns gRPC clients.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\n<code>ToString::to_string</code>, but without panic on OOM.\nA new original deposit request‚Äôs details.\nIncludes the deposit params and the nonce gen initial ‚Ä¶\nUsed for TxHandlers that verifiers don‚Äôt care. These ‚Ä¶\nSignatures that are needed multiple times per an operators ‚Ä¶\nUsed for TxHandlers that verifiers don‚Äôt care. These ‚Ä¶\nA tagged signature struct that identifies the ‚Ä¶\nString value of the enum field names used in the ProtoBuf ‚Ä¶\nString value of the enum field names used in the ProtoBuf ‚Ä¶\nString value of the enum field names used in the ProtoBuf ‚Ä¶\nString value of the enum field names used in the ProtoBuf ‚Ä¶\nString value of the enum field names used in the ProtoBuf ‚Ä¶\nHashes of preimages that will be used to ACK watchtower ‚Ä¶\nGenerated client implementations.\nGenerated server implementations.\nGenerated client implementations.\nGenerated server implementations.\nGenerated client implementations.\nGenerated server implementations.\nNested message and enum types in <code>Deposit</code>.\n/ User‚Äôs deposit UTXO.\nOptional outpoint of the deposit transaction\nUser‚Äôs EVM address.\nReturns the enum value of <code>fee_type</code>, or the default if the ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>NormalSignatureKind</code>, or <code>None</code> if <code>value</code> ‚Ä¶\nConverts an <code>i32</code> to a <code>NumberedSignatureKind</code>, or <code>None</code> if ‚Ä¶\nConverts an <code>i32</code> to a <code>FeeType</code>, or <code>None</code> if <code>value</code> is not a ‚Ä¶\nConverts an <code>i32</code> to a <code>NormalTransactionId</code>, or <code>None</code> if <code>value</code> ‚Ä¶\nConverts an <code>i32</code> to a <code>NumberedTransactionType</code>, or <code>None</code> if ‚Ä¶\nCreates an enum from field names used in the ProtoBuf ‚Ä¶\nCreates an enum from field names used in the ProtoBuf ‚Ä¶\nCreates an enum from field names used in the ProtoBuf ‚Ä¶\nCreates an enum from field names used in the ProtoBuf ‚Ä¶\nCreates an enum from field names used in the ProtoBuf ‚Ä¶\nNested message and enum types in <code>GrpcTransactionId</code>.\nID of the nonce session (used to store nonces in verifier‚Ä¶\nUser‚Äôs UTXO to claim the deposit\nUser‚Äôs [‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>NormalSignatureKind</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>NumberedSignatureKind</code>‚Ä¶\nReturns <code>true</code> if <code>value</code> is a variant of <code>FeeType</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>NormalTransactionId</code>.\nReturns <code>true</code> if <code>value</code> is a variant of ‚Ä¶\nNested message and enum types in <code>NonceGenResponse</code>.\nNumber of nonces to generate\nMove to vault txid that is being replaced.\nNested message and enum types in <code>OperatorParams</code>.\nDeposit identification\n/ X-only public keys of operators that will participate in ‚Ä¶\nThe withdrawal output‚Äôs amount (user‚Äôs signature is ‚Ä¶\nThe withdrawal output‚Äôs script_pubkey (user‚Äôs ‚Ä¶\nUser‚Äôs recovery taproot address.\nSets <code>fee_type</code> to the provided enum value.\nSets <code>signature_kind</code> to the provided enum value.\nSets <code>signature_kind</code> to the provided enum value.\nSets <code>transaction_type</code> to the provided enum value.\nReturns the enum value of <code>signature_kind</code>, or the default ‚Ä¶\nReturns the enum value of <code>signature_kind</code>, or the default ‚Ä¶\nNested message and enum types in <code>TaggedSignature</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the enum value of <code>transaction_type</code>, or the default ‚Ä¶\nTransaction ID\nThe withdrawal transaction‚Äôs txid\nNested message and enum types in ‚Ä¶\nNested message and enum types in <code>VerifierDepositSignParams</code>.\n/ Public keys of verifiers that will participate in the ‚Ä¶\n/ X-only public keys of watchtowers that will participate ‚Ä¶\nWinternitz pubkeys for each bitvm assert tx.\nNested message and enum types in <code>WithdrawResult</code>.\nThe ID of the withdrawal in Citrea\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given ‚Ä¶\nReturns the argument unchanged.\nCreates an emergency stop tx that won‚Äôt be broadcasted. ‚Ä¶\nSend a pre-signed tx to the network\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nThis will call, DepositNonceGen for every verifier, then ‚Ä¶\nPerform an optimistic payout to reimburse a peg-out from ‚Ä¶\nCompress requests with the given encoding.\nSets up the system of verifiers, watchtowers and operators ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nCall‚Äôs withdraw on all operators Used by the ‚Ä¶\nGenerated trait containing gRPC methods that should be ‚Ä¶\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCreates an emergency stop tx that won‚Äôt be broadcasted. ‚Ä¶\nSend a pre-signed tx to the network\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nThis will call, DepositNonceGen for every verifier, then ‚Ä¶\nPerform an optimistic payout to reimburse a peg-out from ‚Ä¶\nCompress responses with the given encoding, if the client ‚Ä¶\nSets up the system of verifiers, watchtowers and operators ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nCall‚Äôs withdraw on all operators Used by the ‚Ä¶\nAn operator is responsible for paying withdrawals. It has ‚Ä¶\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given ‚Ä¶\nSigns everything that includes Operator‚Äôs burn connector.\nReturns the argument unchanged.\nReturns an operator‚Äôs deposit keys. Deposit keys include ‚Ä¶\nReturns an operator‚Äôs parameters. It will be called ‚Ä¶\nReturns the operator‚Äôs xonly public key\nCreates all assert transactions (AssertBegin, MiniAsserts, ‚Ä¶\nSigns all tx‚Äôs it can according to given transaction ‚Ä¶\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nPrepares a withdrawal if it‚Äôs profitable and previous ‚Ä¶\nChecks if a withdrawal is finalized.\nGenerated trait containing gRPC methods that should be ‚Ä¶\nAn operator is responsible for paying withdrawals. It has ‚Ä¶\nServer streaming response type for the DepositSign method.\nServer streaming response type for the GetParams method.\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nSigns everything that includes Operator‚Äôs burn connector.\nReturns the argument unchanged.\nReturns an operator‚Äôs deposit keys. Deposit keys include ‚Ä¶\nReturns an operator‚Äôs parameters. It will be called ‚Ä¶\nReturns the operator‚Äôs xonly public key\nCreates all assert transactions (AssertBegin, MiniAsserts, ‚Ä¶\nSigns all tx‚Äôs it can according to given transaction ‚Ä¶\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nPrepares a withdrawal if it‚Äôs profitable and previous ‚Ä¶\nChecks if a withdrawal is finalized.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given ‚Ä¶\nDebug a transaction by retrieving its current state and ‚Ä¶\nVerifies every signature and signs move_tx.\nSigns deposit with given aggNonces and verifier‚Äôs ‚Ä¶\nReturns the argument unchanged.\nReturns verifiers‚Äô metadata. Needs to be called once per ‚Ä¶\nSigns all tx‚Äôs it can according to given transaction ‚Ä¶\nSigns the verifiers own watchtower challenge tx in the ‚Ä¶\nChecks if the kickoff tx is malicious and if so, try to ‚Ä¶\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nGenerates nonces for a deposit.\nSigns the optimistic payout tx with given aggNonce and ‚Ä¶\nCompress requests with the given encoding.\nSaves an operator.\nSets the operator‚Äôs winternitz keys and challenge ACK ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nGenerated trait containing gRPC methods that should be ‚Ä¶\nServer streaming response type for the DepositSign method.\nServer streaming response type for the NonceGen method.\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nDebug a transaction by retrieving its current state and ‚Ä¶\nVerifies every signature and signs move_tx.\nSigns deposit with given aggNonces and verifier‚Äôs ‚Ä¶\nReturns the argument unchanged.\nReturns verifiers‚Äô metadata. Needs to be called once per ‚Ä¶\nSigns all tx‚Äôs it can according to given transaction ‚Ä¶\nSigns the verifiers own watchtower challenge tx in the ‚Ä¶\nChecks if the kickoff tx is malicious and if so, try to ‚Ä¶\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nGenerates nonces for a deposit.\nSigns the optimistic payout tx with given aggNonce and ‚Ä¶\nCompress responses with the given encoding, if the client ‚Ä¶\nSaves an operator.\nSets the operator‚Äôs winternitz keys and challenge ACK ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length ‚Ä¶\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length ‚Ä¶\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length ‚Ä¶\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nOperator‚Äôs configuration.\nunspent kickoff signatures\nWinternitz pubkeys for each kickoff utxo (to commit ‚Ä¶\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length ‚Ä¶\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length ‚Ä¶\nReturns the argument unchanged.\nMaps a <code>SignatureId</code> to its required signature owner and ‚Ä¶\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length ‚Ä¶\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length ‚Ä¶\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length ‚Ä¶\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nRepresents a network address that can be either TCP or ‚Ä¶\nGeneric function to create a gRPC server with the given ‚Ä¶\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nA task that can be canceled via a oneshot channel\nA task that ignores errors from the inner task and returns ‚Ä¶\nA trait for objects that can be converted into a Task\nTask trait defining the core behavior for cancelable ‚Ä¶\nA task that adds a certain delay after the inner task has ‚Ä¶\nSkips running the task after cancellation using the sender.\nRuns the task in an infinite loop until cancelled using ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIgnores errors from the task.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpawns a <code>tokio::task</code> that runs the task once in the ‚Ä¶\nBuffers consecutive errors until the task succeeds, emits ‚Ä¶\nConvert self into a Task\nMaps the task‚Äôs <code>Ok()</code> output using the given function.\nCreate a new delayed task\nCreate a new cancelable task with a cancellation channel\nRun the task once, returning whether work was done\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nAdds the given delay after a run of the task when the task ‚Ä¶\nA background task manager that can hold and manage ‚Ä¶\nAbort all tasks by dropping their cancellation senders\nReturns the argument unchanged.\nGraceful shutdown of all tasks\nGraceful shutdown of all tasks with a timeout. All tasks ‚Ä¶\nCalls <code>U::from(self)</code>.\nWraps the task in a cancelable loop and spawns it in the ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nChild-Pays-For-Parent: A new ‚Äúchild‚Äù transaction is ‚Ä¶\nA string identifier for this owner type used to ‚Ä¶\nSpecifies the fee bumping strategy used for a transaction.\nA trait for entities that have a name, operator, ‚Ä¶\nReplace-By-Fee: The original unconfirmed transaction is ‚Ä¶\nInformation to re-sign an RBF transaction. Specifically ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitializes <code>tracing</code> as the logger.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMonitors a JoinHandle and aborts the process if the task ‚Ä¶\nWraps a future with a timeout, returning a ‚Ä¶\nConcurrently executes a collection of futures, applying a ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nCreates and signs all the unspent kickoff connector (using ‚Ä¶\nCreates and signs the watchtower challenge with the given ‚Ä¶\nFunction to finalize the deposit. Verifier will check the ‚Ä¶\nTODO: This function should be split in to multiple ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nChecks if the kickoff is malicious and sends the ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNonces used for a deposit session (last nonce is for the ‚Ä¶\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.\nReturns the <code>String</code> produced by <code>T</code>s <code>Debug</code> implementation.")