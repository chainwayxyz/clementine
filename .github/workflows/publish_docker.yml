name: Dockerization

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  # Except in `main` branch! Any cancelled job will cause the
  # CI run to fail, and we want to keep a clean history for major branches.
  cancel-in-progress: ${{ (github.ref != 'refs/heads/main') }}

jobs:
  build_and_publish:
    name: Build and publish Docker image
    runs-on: ubicloud-standard-2
    timeout-minutes: 120

    steps:
      - uses: actions/checkout@v4
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.2.0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./scripts/docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/clementine:${{ github.sha }}

  docker_compose_regtest_deposit:
    name: Run deposit script with the new Docker image on Regtest
    runs-on: ubicloud-standard-16
    needs: build_and_publish

    env:
      INFO_LOG_FILE: ${{ github.workspace }}/test-logs/debug/debug-all-features-test.log
      BQR_ALIAS: bitcoin-cli -regtest -rpcport=20443 -rpcuser=admin -rpcpassword=admin
      BITCOIN_RPC_URL: http://127.0.0.1:20443

    steps:
      - name: Collect Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@v2
        with:
          comment_on_pr: false

      - uses: actions/checkout@v4
      - uses: ./.github/actions/test-prerequisites
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create test log directories
        run: mkdir -p test-logs/debug

      - name: Run deposit script with retries and timeout
        run: |
          set -e
          wget https://static.testnet.citrea.xyz/common/bitvm_cache_v4.bin -O bitvm_cache.bin
          scripts/generate_certs.sh
          docker compose -f ./scripts/docker/docker-compose.full.regtest.yml up --build --no-deps --force-recreate --remove-orphans --abort-on-container-failure &
          echo $! > docker_compose_pid.txt
          sleep 100
          cd core
          for i in {1..30}; do
            timeout 20 ../scripts/run-deposit.sh && break
            echo "run-deposit.sh failed, retrying in 10 seconds ($i/30)..."
            sleep 10
            if [ "$i" -eq 30 ]; then
              echo "run-deposit.sh failed after 30 attempts"
              exit 1
            fi
          done
