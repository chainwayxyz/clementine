[workspace]
resolver = "2"
members = ["core"] # TODO: Add "circuits" back later

[workspace.dependencies]
hex = "0.4.3"
lazy_static = { version = "1.5.0", default-features = false }
serde = { version = "1.0", default-features = false }
serde_json = "1.0.128"
thiserror = "1.0.64"
tracing = { version = "0.1.40", default-features = false }
tracing-subscriber = { version = "0.3.18", features = ["json"] }
jsonrpsee = "0.22.5"
async-trait = "0.1.83"
clap = "4.5.20"
toml = "0.8.19"
sqlx = { version = "0.7.4", default-features = false }
serial_test = "3.2.0"

# bitcoin
bitcoin = "0.31.0"
bitcoincore-rpc = "0.18.0"
musig2 = { version = "0.0.11", features = ["serde"] }
secp256k1 = { version = "0.28.1", features = ["serde", "rand-std"] }
bitcoin-script = { git = "https://github.com/BitVM/rust-bitcoin-script", branch= "StructuredScript" }

# async + gRPC
tonic = { version = "0.12.3", features = [ "tls" ] }
prost = "0.13.3"
tokio = { version = "1.40.0", features = [ "full" ] }
tokio-stream = { version = "0.1.16", features = [ "sync" ] }
futures = "0.3.31"
async-stream = "0.3.6"
futures-util = "0.3.31"
futures-core = "0.3.31"

# Circuits
sha2 = { version = "=0.10.8", default-features = false }
crypto-bigint = { version = "=0.5.5", features = ["rand_core"] }
borsh = { version = "1.5.1", features = ["derive"] }
k256 = { version = "=0.13.3", default-features = false }
risc0-build = "1.2"
risc0-zkvm = { version = "1.2" }
circuits = { git = "https://github.com/chainwayxyz/risc0-to-bitvm2", branch = "downgrade_dependencies" }
bitvm = { git = "https://github.com/BitVM/BitVM" }

[patch.crates-io]
bitcoincore-rpc = { version = "0.18.0", git = "https://github.com/chainwayxyz/rust-bitcoincore-rpc.git", branch = "downgrade_bitcoin" }
base58check = { git = "https://github.com/rust-bitcoin/rust-bitcoin", branch = "bitvm"}
bitcoin = { git = "https://github.com/rust-bitcoin/rust-bitcoin", branch = "bitvm"}
bitcoin_hashes = { git = "https://github.com/rust-bitcoin/rust-bitcoin", branch = "bitvm"}
bitcoin-internals = { git = "https://github.com/rust-bitcoin/rust-bitcoin", branch = "bitvm"}
bitcoin-io = { git = "https://github.com/rust-bitcoin/rust-bitcoin", branch = "bitvm"}
bitcoin-units = { git = "https://github.com/rust-bitcoin/rust-bitcoin", branch = "bitvm"}

ark-ff = { git = "https://github.com/chainwayxyz/algebra/", branch = "new-ate-loop" }
ark-ec = { git = "https://github.com/chainwayxyz/algebra/", branch = "new-ate-loop" }
ark-poly = { git = "https://github.com/chainwayxyz/algebra/", branch = "new-ate-loop" }
ark-serialize = { git = "https://github.com/chainwayxyz/algebra/", branch = "new-ate-loop" }
ark-bn254 = { git = "https://github.com/chainwayxyz/algebra/", branch = "new-ate-loop", features = ["curve"], default-features = false }

ark-r1cs-std = { git = "https://github.com/arkworks-rs/r1cs-std/" }
ark-crypto-primitives = { git = "https://github.com/arkworks-rs/crypto-primitives/" }

ark-relations = { git = "https://github.com/arkworks-rs/snark/" }
ark-snark = { git = "https://github.com/arkworks-rs/snark/" }
ark-groth16 = { git = "https://github.com/arkworks-rs/groth16" }

[profile.release]
lto = true
strip = true
codegen-units = 1
# TODO: Abort on panic can be enabled to save binary space. But needs a proper
# error management infrastructure to not lose crash report.
# panic = "abort"
