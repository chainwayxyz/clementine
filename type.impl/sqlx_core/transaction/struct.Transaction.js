(function() {
    var type_impls = Object.fromEntries([["clementine_core",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Acquire%3C't%3E-for-%26mut+Transaction%3C'c,+DB%3E\" class=\"impl\"><a href=\"#impl-Acquire%3C't%3E-for-%26mut+Transaction%3C'c,+DB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'c, 't, DB&gt; Acquire&lt;'t&gt; for &amp;'t mut Transaction&lt;'c, DB&gt;<div class=\"where\">where\n    DB: Database,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Database\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Database\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Database</a> = DB</h4></section><section id=\"associatedtype.Connection\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Connection\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Connection</a> = &amp;'t mut &lt;DB as Database&gt;::Connection</h4></section><section id=\"method.acquire\" class=\"method trait-impl\"><a href=\"#method.acquire\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">acquire</a>(\n    self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&amp;'t mut Transaction&lt;'c, DB&gt; as Acquire&lt;'t&gt;&gt;::Connection, Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 't&gt;&gt;</h4></section><section id=\"method.begin\" class=\"method trait-impl\"><a href=\"#method.begin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">begin</a>(\n    self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Transaction&lt;'t, DB&gt;, Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 't&gt;&gt;</h4></section></div></details>","Acquire<'t>","clementine_core::database::DatabaseTransaction"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3037]}